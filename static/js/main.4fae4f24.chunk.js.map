{"version":3,"sources":["redux/auth/authSelector.js","redux/auth/authOperations.js","redux/theme/themeAction.js","components/Navigation/Header.module.css","components/AuthNav/AuthNav.module.css","redux/auth/authActions.js","redux/theme/themeSelectors.js","components/AppBar/AppBar.module.css","redux/contacts/contactsAction.js","components/AuthNav/AuthNav.js","routes.js","components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","services/themeSwitch.js","components/Route/PrivateRoute.js","components/Route/PublicRoute.js","App.js","AppContainer.js","redux/contacts/contactsReducer.js","redux/theme/themeReducer.js","redux/auth/authReducer.js","redux/store.js","index.js"],"names":["isAuthenticated","state","auth","token","getUserName","user","name","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","authActions","registerRequest","post","then","response","data","registerSuccess","catch","error","registerError","login","loginRequest","loginSuccess","logInError","getCurrentUser","getState","persistedToken","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","logout","logoutRequest","logoutSuccess","logoutError","changeTheme","createAction","module","exports","loginError","getCurrentUsererror","getTheme","themeColor","addContactRequest","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","changeContactRequest","changeContactSuccess","changeContactError","addIdEditContact","deleteIdEditContact","AuthNav","to","activeClassName","style","active","exact","path","label","component","lazy","private","restricted","connect","authSelector","console","log","routes","className","nav","onLogout","authOperations","type","onClick","toggleTheme","themeAction","styles","header","themeSwitch","light","headerBg","fontColor","bodybg","dark","Component","routeProps","render","props","App","themeState","theme","color","background","fallback","map","route","key","AppContainer","this","onGetCurrentUser","themeSelectors","contacts","createReducer","contactsAction","action","payload","filter","contact","id","idEditContact","loading","addContactsError","combineReducers","themeReducer","initialUserState","email","authPersistConfig","storage","whitelist","store","configureStore","reducer","contactsRoot","contactsReducer","persistReducer","authReducer","middleware","thunk","persistor","persistStore","ReactDOM","document","getElementById"],"mappings":"+IAIe,KAAEA,gBAJO,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,OAIVC,YAFd,SAAAH,GAAK,OAAIA,EAAMC,KAAKG,KAAKC,Q,gCCF7C,4BAGAC,IAAMC,SAASC,QAAU,4CAEzB,IAAMN,EAAQ,SACRA,GACFI,IAAMC,SAASE,QAAQC,OAAOC,cAA9B,iBAAwDT,IAFtDA,EAAQ,WAKVI,IAAMC,SAASE,QAAQC,OAAOC,cAAgB,IAyDnC,KACbC,SAtDe,SAAAC,GAAW,OAAI,SAAAC,GAC9BA,EAASC,IAAYC,mBACrBV,IACGW,KAAK,gBAAiBJ,GACtBK,MAAK,SAAAC,GACJjB,EAAUiB,EAASC,KAAKlB,OACxBY,EAASC,IAAYM,gBAAgBF,EAASC,UAE/CE,OAAM,SAAAC,GAAK,OAAIT,EAASC,IAAYS,cAAcD,SA+CrDE,MA5CY,SAAAZ,GAAW,OAAI,SAAAC,GAC3BA,EAASC,IAAYW,gBAErBpB,IACGW,KAAK,eAAgBJ,GACrBK,MAAK,SAAAC,GACJjB,EAAUiB,EAASC,KAAKlB,OACxBY,EAASC,IAAYY,aAAaR,EAASC,UAE5CE,OAAM,SAAAC,GAAK,OAAIT,EAASC,IAAYa,WAAWL,SAoClDM,eAjCqB,kBAAM,SAACf,EAAUgB,GAAc,IAEnCC,EACbD,IADF7B,KAAQC,MAGL6B,IAIL7B,EAAU6B,GACVjB,EAASC,IAAYiB,yBAErB1B,IACG2B,IAAI,kBACJf,MAAK,gBAAGE,EAAH,EAAGA,KAAH,OAAcN,EAASC,IAAYmB,sBAAsBd,OAC9DE,OAAM,SAAAC,GAAK,OAAIR,IAAYoB,oBAAoBZ,SAmBlDa,OAhBa,kBAAM,SAAAtB,GACnBA,EAASC,IAAYsB,iBAErB/B,IACGW,KAAK,iBACLC,MAAK,WACJhB,IACAY,EAASC,IAAYuB,oBAEtBhB,OAAM,SAAAC,GAAK,OAAIT,EAASC,IAAYwB,YAAYhB,W,gCChErD,WAEMiB,EAAcC,YAAa,qBAElB,KAAED,gB,mBCHjBE,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,IAAM,sB,mBCApFD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,KAAO,wB,+BCD1D,WAEM3B,EAAkByB,YAAa,wBAC/BpB,EAAkBoB,YAAa,wBAC/BjB,EAAgBiB,YAAa,sBAE7Bf,EAAee,YAAa,qBAC5Bd,EAAec,YAAa,qBAC5BG,EAAaH,YAAa,mBAE1BJ,EAAgBI,YAAa,sBAC7BH,EAAgBG,YAAa,sBAC7BF,EAAcE,YAAa,oBAE3BT,EAAwBS,YAAa,8BACrCP,EAAwBO,YAAa,8BACrCI,EAAsBJ,YAAa,4BAE1B,KACXzB,kBACAK,kBACAG,gBAEAE,eACAC,eACAiB,aAEAP,gBACAC,gBACAC,cAEAP,wBACAE,wBACAW,wB,gCC/BW,KAACC,SAFC,SAAA9C,GAAK,OAAIA,EAAM+C,c,mBCChCL,EAAOC,QAAU,CAAC,OAAS,yB,mECD3B,WAEMK,EAAoBP,YAAa,wBACjCQ,EAAoBR,YAAa,wBACjCS,EAAkBT,YAAa,sBAE/BU,EAAuBV,YAAa,0BACpCW,EAAuBX,YAAa,0BACpCY,EAAqBZ,YAAa,wBAElCa,EAAuBb,YAAa,2BACpCc,EAAuBd,YAAa,2BACpCe,EAAqBf,YAAa,yBAElCgB,EAAehB,YAAa,yBAE5BiB,EAAuBjB,YAAc,mCACrCkB,EAAuBlB,YAAc,mCACrCmB,EAAqBnB,YAAc,iCAEnCoB,EAAmBpB,YAAa,6BAChCqB,EAAsBrB,YAAa,gCAG1B,KACbO,oBACAC,oBACAC,kBAEAC,uBACAC,uBACAC,qBAEAC,uBACAC,uBACAC,qBAEAE,uBACAC,uBACAC,qBAEAH,eACAI,mBACAC,wB,qOCtBaC,EAdC,WACd,OACE,6BACE,kBAAC,IAAD,CAASC,GAAG,YAAYC,gBAAiBC,IAAMC,OAAQC,OAAK,GAA5D,YAIA,kBAAC,IAAD,CAASJ,GAAG,SAASC,gBAAiBC,IAAMC,OAAQC,OAAK,GAAzD,W,iBCZS,GACX,CACIC,KAAM,IACNC,MAAO,OACPF,OAAO,EACPG,UAAWC,gBAAK,kBAAK,gCACrBC,SAAS,EACTC,YAAY,GAEhB,CACIL,KAAM,YACNC,MAAO,WACPF,OAAO,EACPG,UAAWC,gBAAK,kBAAK,gCACrBC,SAAS,EACTC,YAAY,GAEhB,CACIL,KAAM,SACNC,MAAO,QACPF,OAAO,EACPG,UAAWC,gBAAK,kBAAK,gCACrBC,SAAS,EACTC,YAAY,GAEhB,CACIL,KAAM,YACNC,MAAO,WACPF,OAAO,EACPG,UAAWC,gBAAK,kBAAK,gCACrBC,SAAS,EACTC,YAAY,ICOLC,eAJS,SAAA3E,GAAK,MAAK,CAChCD,gBAAiB6E,IAAa7E,gBAAgBC,MAGjC2E,EA/BI,SAAC,GAAyB,IAAvB5E,EAAsB,EAAtBA,gBAEpB,OADA8E,QAAQC,IAAIC,GAEV,yBAAKC,UAAWd,IAAMe,KAapB,kBAAC,IAAD,CAASb,OAAK,EAACJ,GAAG,IAAIC,gBAAiBC,IAAMC,QAA7C,aAICpE,GAAmB,kBAAC,IAAD,CAASiE,GAAG,YAAYC,gBAAiBC,IAAMC,QAA/C,gBCPXQ,eALS,SAAA3E,GAAK,MAAK,CAC9BK,KAAMuE,IAAazE,YAAYH,MAIK,CAACkF,SAAUC,IAAe/C,QAAnDuC,EAjBE,SAAC,GAAwB,IAAtBtE,EAAqB,EAArBA,KAAM6E,EAAe,EAAfA,SACxB,OACE,6BACE,0CAAgB7E,GAChB,6BACA,4BAAQ+E,KAAK,SAASC,QAASH,GAA/B,c,QCsBSP,eARS,SAAA3E,GAAK,MAAK,CAChCD,gBAAiB6E,IAAa7E,gBAAgBC,OAGrB,SAAAc,GAAQ,MAAK,CACtCwE,YAAa,kBAAMxE,EAASyE,IAAY/C,mBAG3BmC,EArBA,SAAC,GAAsC,IAApC5E,EAAmC,EAAnCA,gBAAiBuF,EAAkB,EAAlBA,YACjC,OACE,4BAAQN,UAAWQ,IAAOC,QACxB,kBAAC,EAAD,MACA,4BAAQL,KAAK,SAASC,QAASC,GAC5B,IADH,gBAICvF,EAAkB,kBAAC,EAAD,MAAe,kBAAC,EAAD,UCNzB2F,EAbK,CAClBC,MAAO,CACLC,SAAU,UACVC,UAAW,QACXC,OAAQ,SAEVC,KAAM,CACJH,SAAU,UACVC,UAAW,QACXC,OAAQ,U,QCqBGnB,eAJS,SAAA3E,GACtB,MAAO,CAAED,gBAAiB6E,IAAa7E,gBAAgBC,MAG1C2E,EAvBM,SAAC,GAIf,IAHMqB,EAGP,EAHJzB,UACAxE,EAEI,EAFJA,gBACGkG,EACC,+CACJ,OACE,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAAC,GACN,OAAOpG,EACL,kBAACiG,EAAcG,GAEf,kBAAC,IAAD,CAAUnC,GAAG,kBCURW,eAJS,SAAA3E,GAAK,MAAK,CAC9BD,gBAAiB6E,IAAa7E,gBAAgBC,MAGnC2E,EAtBK,SAAC,GAAD,IACPqB,EADO,EAClBzB,UACAxE,EAFkB,EAElBA,gBACA2E,EAHkB,EAGlBA,WACGuB,EAJe,mEAMlB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAAC,GACN,OAAOpG,GAAmB2E,EACxB,kBAAC,IAAD,CAAUV,GAAG,cAEb,kBAACgC,EAAcG,UCwBRC,EAjCH,SAAC,GAAe,IACtBC,EAAa,QAGjB,OAFSA,EAFgB,EAAZC,MAES,QAAyB,OAG7C,kBAAC,IAAD,KACE,yBACEpC,MAAO,CACLqC,MAAOb,EAAYW,GAAYR,UAC/BW,WAAYd,EAAYW,GAAYP,SAGtC,kBAAC,EAAD,MACA,kBAAC,WAAD,CAAUW,SAAU,2CAClB,kBAAC,IAAD,KACG1B,EAAO2B,KAAI,SAAAC,GACV,OAAOA,EAAMlC,QACX,kBAAC,EAAD,eAAcmC,IAAKD,EAAMrC,OAAWqC,IAEpC,kBAAC,EAAD,eACEC,IAAKD,EAAMrC,OACPqC,EAFN,CAGEjC,WAAYiC,EAAMjC,sBC1B9BmC,E,kLAEEC,KAAKX,MAAMY,qB,+BAGT,OAAO,kBAAC,EAAQD,KAAKX,W,GALJH,aAgBVrB,eANO,SAAA3E,GACpB,MAAO,CACLsG,MAAOU,IAAelE,SAAS9C,MAIK,CACtC+G,iBAAkB5B,IAAetD,gBADpB8C,CAEZkC,G,6ECHCI,EAAWC,YAAc,IAAD,mBAC3BC,IAAe/D,sBAAuB,SAACpD,EAAOoH,GAAR,OAAmBA,EAAOC,WADrC,cAE3BF,IAAelE,mBAnBG,SAACjD,EAAOoH,GAC3B,MAAM,GAAN,mBAAWpH,GAAX,CAAkBoH,EAAOC,aAgBG,cAG3BF,IAAe5D,sBAhBM,SAACvD,EAAOoH,GAC9B,OAAOpH,EAAMsH,QAAO,SAAAC,GAAO,OAAIA,EAAQC,KAAOJ,EAAOC,cAYzB,cAI3BF,IAAexD,sBAbM,SAAC3D,EAAOoH,GAE9B,OAAOpH,EAAM0G,KAAI,SAAAa,GACf,OAAOA,EAAQC,KAAOJ,EAAOC,QAAQE,QAAQC,GACzCJ,EAAOC,QAAQE,QACfA,QAIsB,IAgBxBE,EAAgBP,YAAc,IAAD,mBAChCC,IAAetD,kBATS,SAAC7D,EAAD,GAAyB,IAAfqH,EAAc,EAAdA,QACnC,MAAM,GAAN,mBAAWrH,GAAX,CAAkBqH,OAOe,cAEhCF,IAAerD,qBANY,SAAC9D,EAAD,GAAyB,IAAfqH,EAAc,EAAdA,QACtC,OAAOrH,EAAMsH,QAAO,SAAAE,GAAE,OAAIA,IAAOH,QAGA,IAS7BC,GAASJ,YAAc,GAAD,eACzBC,IAAe1D,cALK,SAACzD,EAAD,GACrB,OAD6C,EAAdqH,YAQ3BK,GAAUR,aAAc,GAAD,mBAC1BC,IAAehE,sBAAuB,kBAAM,KADlB,cAE1BgE,IAAe/D,sBAAuB,kBAAM,KAFlB,cAG1B+D,IAAe9D,oBAAqB,kBAAM,KAHhB,cAI1B8D,IAAenE,mBAAoB,kBAAM,KAJf,cAK1BmE,IAAelE,mBAAoB,kBAAM,KALf,cAM1BkE,IAAeQ,kBAAmB,kBAAM,KANd,cAO1BR,IAAe7D,sBAAuB,kBAAM,KAPlB,cAQ1B6D,IAAe5D,sBAAuB,kBAAM,KARlB,cAS1B4D,IAAe3D,oBAAqB,kBAAM,KAThB,cAU1B2D,IAAezD,sBAAsB,kBAAK,KAVhB,cAW1ByD,IAAexD,sBAAuB,kBAAK,KAXjB,cAY1BwD,IAAevD,oBAAqB,kBAAK,KAZf,IAedgE,eAAgB,CAC7BX,WACAQ,gBACAH,UACAI,aC7DaG,GAJMX,aAAc,EAAD,eAC/B3B,IAAY/C,aAAc,SAAAxC,GAAK,OAAKA,M,QCAjC8H,GAAmB,CAACzH,KAAM,KAAM0H,MAAO,MAEvC3H,GAAO8G,YAAcY,IAAD,iBAAC,EACtB/G,KAAYM,iBAAkB,SAACrB,EAAD,YAASqH,QAAqBjH,QADvC,YAAC,EAEtBW,KAAYY,cAAe,SAAC3B,EAAD,YAASqH,QAAqBjH,QAFpC,YAAC,EAGtBW,KAAYmB,uBAAwB,SAAClC,EAAD,YAAUqH,WAHzB,YAAC,EAItBtG,KAAYuB,eAAgB,kBAAMwF,MAJb,IAOpB5H,GAAQgH,YAAc,MAAD,iBAAC,EACvBnG,KAAYM,iBAAkB,SAACrB,EAAD,YAAUqH,QAAsBnH,SADxC,YAAC,EAEvBa,KAAYY,cAAe,SAAC3B,EAAD,YAAUqH,QAAsBnH,SAFrC,YAAC,EAGvBa,KAAYuB,eAAgB,kBAAM,QAHZ,IAMnBf,GAAQ2F,YAAc,MAAD,mBACxBnG,KAAYS,eAAgB,SAACxB,EAAD,YAAUqH,WADd,cAExBtG,KAAY6B,YAAa,SAAC5C,EAAD,YAAUqH,WAFX,cAGxBtG,KAAYwB,aAAc,SAACvC,EAAD,YAAUqH,WAHZ,cAIxBtG,KAAYoB,qBAAsB,SAACnC,EAAD,YAAUqH,WAJpB,IAOdO,eAAgB,CAC/BxH,QACAF,SACAqB,WCrBMyG,GAAoB,CACxBpB,IAAK,OACLqB,YACAC,UAAW,CAAC,UAGDC,GAAQC,YAAe,CAClCC,QAAS,CACPtF,WAAY8E,GACZS,aAAcC,GACdtI,KAAMuI,YAAeR,GAAmBS,KAE1CC,WAAY,CAACC,OAGFC,GAAYC,YAAaV,IChBtCW,IAAS5C,OACP,kBAAC,IAAD,CAAUiC,MAAOA,IACf,kBAAC,IAAD,CAAaT,QAAS,KAAMkB,UAAWA,IACrC,kBAAC,EAAD,QAGJG,SAASC,eAAe,W","file":"static/js/main.4fae4f24.chunk.js","sourcesContent":["const isAuthenticated = state => state.auth.token;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nexport default { isAuthenticated, getUserName };","import axios from 'axios';\r\nimport authActions from './authActions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n  axios\r\n    .post('/users/signup', credentials)\r\n    .then(response => {\r\n      token.set(response.data.token);\r\n      dispatch(authActions.registerSuccess(response.data));\r\n    })\r\n    .catch(error => dispatch(authActions.registerError(error)));\r\n};\r\n\r\nconst login = credentials => dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  axios\r\n    .post('/users/login', credentials)\r\n    .then(response => {\r\n      token.set(response.data.token);\r\n      dispatch(authActions.loginSuccess(response.data));\r\n    })\r\n    .catch(error => dispatch(authActions.logInError(error)));\r\n};\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  axios\r\n    .get('/users/current')\r\n    .then(({ data }) => dispatch(authActions.getCurrentUserSuccess(data)))\r\n    .catch(error => authActions.getCurrentUserError(error));\r\n};\r\n\r\nconst logout = () => dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  axios\r\n    .post('/users/logout')\r\n    .then(() => {\r\n      token.unset();\r\n      dispatch(authActions.logoutSuccess());\r\n    })\r\n    .catch(error => dispatch(authActions.logoutError(error)));\r\n};\r\n\r\nexport default {\r\n  register,\r\n  login,\r\n  getCurrentUser,\r\n  logout,\r\n};\r\n","import {createAction} from \"@reduxjs/toolkit\"\r\n\r\nconst changeTheme = createAction('theme/changeTheme');\r\n\r\nexport default { changeTheme };\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"Header_active__1EIrO\",\"list\":\"Header_list__3J-_k\",\"nav\":\"Header_nav__qfdLY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"AuthNav_active__co3at\",\"list\":\"AuthNav_list__3mAgR\"};","import {createAction} from \"@reduxjs/toolkit\";\r\n\r\nconst registerRequest = createAction(\"auth/registerRequest\");\r\nconst registerSuccess = createAction(\"auth/registerSuccess\");\r\nconst registerError = createAction(\"auth/registerError\");\r\n\r\nconst loginRequest = createAction(\"auth/loginRequest\");\r\nconst loginSuccess = createAction(\"auth/loginSuccess\");\r\nconst loginError = createAction(\"auth/loginError\");\r\n\r\nconst logoutRequest = createAction(\"auth/logoutRequest\");\r\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\r\nconst logoutError = createAction(\"auth/logoutError\");\r\n\r\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\r\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\r\nconst getCurrentUsererror = createAction(\"auth/getCurrentUsererror\");\r\n\r\nexport default {\r\n    registerRequest,\r\n    registerSuccess,\r\n    registerError,\r\n\r\n    loginRequest,\r\n    loginSuccess,\r\n    loginError,\r\n\r\n    logoutRequest,\r\n    logoutSuccess,\r\n    logoutError,\r\n\r\n    getCurrentUserRequest,\r\n    getCurrentUserSuccess,\r\n    getCurrentUsererror,\r\n}","const getTheme = state => state.themeColor;\r\n\r\nexport default {getTheme};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__gCsQD\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContactRequest = createAction('contacts/ADD_REQUEST');\r\nconst addContactSuccess = createAction('contacts/ADD_SUCCESS');\r\nconst addContactError = createAction('contacts/ADD_ERROR');\r\n\r\nconst fetchContactsRequest = createAction('contacts/FETCH_REQUEST');\r\nconst fetchContactsSuccess = createAction('contacts/FETCH_SUCCESS');\r\nconst fetchContactsError = createAction('contacts/FETCH_ERROR');\r\n\r\nconst deleteContactRequest = createAction('contacts/DELETE_REQUEST');\r\nconst deleteContactSuccess = createAction('contacts/DELETE_SUCCESS');\r\nconst deleteContactError = createAction('contacts/DELETE_ERROR');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst changeContactRequest = createAction ('contacts/CHANGE_CONTACT_REQUEST')\r\nconst changeContactSuccess = createAction ('contacts/CHANGE_CONTACT_SUCCESS')\r\nconst changeContactError = createAction ('contacts/CHANGE_CONTACT_ERROR')\r\n\r\nconst addIdEditContact = createAction('contacts/addIdEditContact');\r\nconst deleteIdEditContact = createAction('contacts/deleteIdEditContact');\r\n\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n\r\n  changeContactRequest,\r\n  changeContactSuccess,\r\n  changeContactError,\r\n\r\n  changeFilter,\r\n  addIdEditContact,\r\n  deleteIdEditContact,\r\n};\r\n","import React from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './AuthNav.module.css';\r\n\r\n\r\n\r\nconst AuthNav = () => {\r\n  return (\r\n    <div>\r\n      <NavLink to=\"/register\" activeClassName={style.active} exact>\r\n        Register\r\n      </NavLink>\r\n\r\n      <NavLink to=\"/login\" activeClassName={style.active} exact>\r\n        Login\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthNav;","import {lazy} from 'react';\r\n\r\nexport default [\r\n    {\r\n        path: \"/\",\r\n        label: \"Home\",\r\n        exact: true,\r\n        component: lazy(()=> import (\"./pages/HomePage/HomePage\")),\r\n        private: false,\r\n        restricted: false\r\n    },\r\n    {\r\n        path: \"/register\",\r\n        label: \"Register\",\r\n        exact: true,\r\n        component: lazy(()=> import (\"./pages/RegisterPage/RegisterPage\")),\r\n        private: false,\r\n        restricted: true\r\n    },\r\n    {\r\n        path: \"/login\",\r\n        label: \"Login\",\r\n        exact: true,\r\n        component: lazy(()=> import (\"./pages/LoginPage/LoginPage\")),\r\n        private: false,\r\n        restricted: true\r\n    },\r\n    {\r\n        path: \"/contacts\",\r\n        label: \"Contacts\",\r\n        exact: true,\r\n        component: lazy(()=> import (\"./pages/Contacts/ContactsContainer\")),\r\n        private: true,\r\n        restricted: false\r\n    },\r\n]\r\n","import React from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './Header.module.css';\r\nimport routes from '../../routes';\r\nimport { connect } from 'react-redux';\r\nimport authSelector from '../../redux/auth/authSelector';\r\n\r\n\r\nconst Navigation = ({ isAuthenticated }) => {\r\n  console.log(routes);\r\n  return (\r\n    <nav className={style.nav}>\r\n      {/* {routes.map(route=>)} */}\r\n      {/* {routes.map(route => (\r\n        <NavLink\r\n          exact={route.exact}\r\n          key={route.label}\r\n          to={route.path}\r\n          activeClassName={style.active}\r\n        >\r\n          {route.label}\r\n        </NavLink>\r\n      ))} */}\r\n\r\n      <NavLink exact to=\"/\" activeClassName={style.active}>\r\n        Home Page\r\n      </NavLink>\r\n\r\n      {isAuthenticated && <NavLink to=\"/contacts\" activeClassName={style.active}>\r\n        Contacts\r\n      </NavLink> }\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelector.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\"\r\nimport authSelector from \"../../redux/auth/authSelector\"\r\nimport authOperations from \"../../redux/auth/authOperations\"\r\n\r\nconst UserMenu = ({ name, onLogout }) => {\r\n  return (\r\n    <div>\r\n      <span>Welcome, {name}</span>\r\n      <br/>\r\n      <button type=\"button\" onClick={onLogout}>\r\n        Logout\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    name: authSelector.getUserName(state)\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {onLogout: authOperations.logout})(UserMenu);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport authSelector from '../../redux/auth/authSelector';\r\nimport styles from './AppBar.module.css';\r\n\r\nimport AuthNav from '../AuthNav/AuthNav';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\n\r\nimport themeAction from '../../redux/theme/themeAction';\r\n\r\nconst AppBar = ({ isAuthenticated, toggleTheme }) => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <Navigation />\r\n      <button type=\"button\" onClick={toggleTheme}>\r\n        {' '}\r\n        Change theme\r\n      </button>\r\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelector.isAuthenticated(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleTheme: () => dispatch(themeAction.changeTheme()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppBar);\r\n","const themeSwitch = {\r\n  light: {\r\n    headerBg: '#F7B30C',\r\n    fontColor: 'black',\r\n    bodybg: 'white',\r\n  },\r\n  dark: {\r\n    headerBg: '#3c3c3c',\r\n    fontColor: 'white',\r\n    bodybg: 'black',\r\n  },\r\n};\r\n\r\nexport default themeSwitch;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport authSelector from '../../redux/auth/authSelector';\r\n// import withAuth from \"../hoc/withAuth\";\r\n// import {withRouter} from \"react-router-dom\"\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...routeProps\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={props => {\r\n        return isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return { isAuthenticated: authSelector.isAuthenticated(state) };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n// export default withRouter(withAuth(PrivateRoute))","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport authSelector from '../../redux/auth/authSelector';\r\n// import withAuth from \"../hoc/withAuth\"\r\n// import {withRouter} from \"react-router-dom\"\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  restricted,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props => {\r\n      return isAuthenticated && restricted ? (\r\n        <Redirect to=\"/contacts\" />\r\n      ) : (\r\n        <Component {...props} />\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelector.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n\r\n// export default withRouter(withAuth(PublicRoute))","import React, { Suspense } from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\n\r\nimport AppBar from './components/AppBar/AppBar';\r\nimport routes from './routes';\r\n\r\nimport themeSwitch from './services/themeSwitch';\r\nimport PrivateRoute from './components/Route/PrivateRoute';\r\nimport PublicRoute from './components/Route/PublicRoute';\r\n\r\nconst App = ({ theme }) => {\r\n  let themeState = 'light';\r\n  theme ? (themeState = 'light') : (themeState = 'dark');\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div\r\n        style={{\r\n          color: themeSwitch[themeState].fontColor,\r\n          background: themeSwitch[themeState].bodybg,\r\n        }}\r\n      >\r\n        <AppBar />\r\n        <Suspense fallback={<h1>Loading...</h1>}>\r\n          <Switch>\r\n            {routes.map(route => {\r\n              return route.private ? (\r\n                <PrivateRoute key={route.label} {...route} />\r\n              ) : (\r\n                <PublicRoute\r\n                  key={route.label}\r\n                  {...route}\r\n                  restricted={route.restricted}\r\n                />\r\n              );\r\n            })}\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React, { Component } from 'react'\r\nimport themeSelectors from \"./redux/theme/themeSelectors\";\r\nimport authOperations from './redux/auth/authOperations';\r\nimport { connect } from 'react-redux';\r\nimport App from \"./App\"\r\n\r\nclass AppContainer extends Component {\r\n    componentDidMount() {\r\n        this.props.onGetCurrentUser();\r\n      }\r\n      render () {\r\n          return <App {...this.props}/>\r\n      }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      theme: themeSelectors.getTheme(state)\r\n    }\r\n  }\r\n  \r\n  export default connect(mapStateToProps, {\r\n    onGetCurrentUser: authOperations.getCurrentUser,\r\n  })(AppContainer);","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactsAction from './contactsAction';\r\n\r\nconst onAddContact = (state, action) => {\r\n  return [...state, action.payload];\r\n};\r\n\r\nconst onDeleteContact = (state, action) => {\r\n  return state.filter(contact => contact.id !== action.payload);\r\n};\r\n\r\nconst onChangeContact = (state, action) => {\r\n  // console.log(action.payload.contact);\r\n  return state.map(contact => {\r\n    return contact.id === action.payload.contact.id\r\n      ? action.payload.contact \r\n      : contact;\r\n  });\r\n};\r\n\r\nconst contacts = createReducer([], {\r\n  [contactsAction.fetchContactsSuccess]: (state, action) => action.payload,\r\n  [contactsAction.addContactSuccess]: onAddContact,\r\n  [contactsAction.deleteContactSuccess]: onDeleteContact,\r\n  [contactsAction.changeContactSuccess]: onChangeContact,\r\n  // [contactsAction.changeContact]: onChangeContact,\r\n});\r\n\r\nconst onAddIdEditContact = (state, { payload }) => {\r\n  return [...state, payload];\r\n};\r\n\r\nconst onDeleteIdEditContact = (state, { payload }) => {\r\n  return state.filter(id => id !== payload);\r\n};\r\n\r\nconst idEditContact = createReducer([], {\r\n  [contactsAction.addIdEditContact]: onAddIdEditContact,\r\n  [contactsAction.deleteIdEditContact]: onDeleteIdEditContact,\r\n});\r\n\r\nconst onChangeFilter = (state, { payload }) => {\r\n  return payload;\r\n};\r\n\r\nconst filter = createReducer('', {\r\n  [contactsAction.changeFilter]: onChangeFilter,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [contactsAction.fetchContactsRequest]: () => true,\r\n  [contactsAction.fetchContactsSuccess]: () => false,\r\n  [contactsAction.fetchContactsError]: () => false,\r\n  [contactsAction.addContactRequest]: () => true,\r\n  [contactsAction.addContactSuccess]: () => false,\r\n  [contactsAction.addContactsError]: () => false,\r\n  [contactsAction.deleteContactRequest]: () => true,\r\n  [contactsAction.deleteContactSuccess]: () => false,\r\n  [contactsAction.deleteContactError]: () => false,\r\n  [contactsAction.changeContactRequest]:()=> true,\r\n  [contactsAction.changeContactSuccess]: ()=> false,\r\n  [contactsAction.changeContactError]: ()=> false,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  idEditContact,\r\n  filter,\r\n  loading,\r\n});\r\n","  \r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport themeAction from \"./themeAction\"\r\n\r\nconst themeReducer = createReducer(true, {\r\n  [themeAction.changeTheme]: state => !state,\r\n});\r\n\r\nexport default themeReducer;","  \r\nimport { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './authActions';\r\n\r\nconst initialUserState = {name: null, email: null};\r\n\r\nconst user = createReducer(initialUserState, {\r\n    [authActions.registerSuccess]: (state, {payload}) => payload.user,\r\n    [authActions.loginSuccess]: (state, {payload}) => payload.user,\r\n    [authActions.getCurrentUserSuccess]: (state, { payload }) => payload,\r\n    [authActions.logoutSuccess]: () => initialUserState,\r\n})\r\n\r\nconst token = createReducer(null, {\r\n    [authActions.registerSuccess]: (state, { payload }) => payload.token,\r\n    [authActions.loginSuccess]: (state, { payload }) => payload.token,\r\n    [authActions.logoutSuccess]: () => null,\r\n  });\r\n  \r\n  const error = createReducer(null, {\r\n    [authActions.registerError]: (state, { payload }) => payload,\r\n    [authActions.loginError]: (state, { payload }) => payload,\r\n    [authActions.logoutError]: (state, { payload }) => payload,\r\n    [authActions.getCurrentUserError]: (state, { payload }) => payload,\r\n  });\r\n\r\nexport default combineReducers({\r\nuser,\r\ntoken,\r\nerror,\r\n});","import { configureStore } from '@reduxjs/toolkit';\r\nimport thunk from 'redux-thunk';\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nimport contactsReducer from './contacts/contactsReducer';\r\nimport themeReducer from './theme/themeReducer';\r\nimport authReducer from './auth/authReducer';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    themeColor: themeReducer,\r\n    contactsRoot: contactsReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer)\r\n  },\r\n  middleware: [thunk],\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './AppContainer';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from './redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <Provider store={store} >\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}