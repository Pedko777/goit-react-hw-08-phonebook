{"version":3,"sources":["components/conactForm/contactForm.module.css","components/contactList/contactList.module.css","components/contactListItem/contactListItem.module.css","pages/Contacts/Contacts.module.css","redux/contacts/contactsOperation.js","redux/contacts/contactsSelectors.js","components/conactForm/ContactForm.js","components/contactListItem/ContactListItem.js","components/contactListItem/ContactListIemContainer.js","components/contactList/ContactList.js","components/filter/Filter.js","components/logo/Logo.js","pages/Contacts/Contacts.js","pages/Contacts/ContactsContainer.js"],"names":["module","exports","axios","defaults","baseURL","name","number","dispatch","contactsAction","addContactRequest","post","then","data","addContactSuccess","catch","error","addContactError","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","changeContactRequest","patch","changeContactSuccess","contact","changeContactError","getFilter","state","contactsRoot","filter","getContacts","contacts","getLoading","loading","getFilteredContacts","createSelector","toLowerCase","includes","ConatctForm","handleChange","e","target","value","setState","handleSubmit","preventDefault","onSubmit","props","this","className","styles","editForm","label","input","type","placeholder","onChange","button","Component","connect","contactsOperation","ContactListItem","deleteIdEditContact","changeContact","deleteContact","isShowForm","addIdEditContact","listItem","listItemP","listItemButton","onClick","idEditContact","some","idEdit","contactsSelectors","contactList","map","key","onChangeFilter","text","changeFilter","Logo","Contacts","isLoadingContact","isAuthenticated","sectionTitle","length","ContactsContainer","onFetchContacts","theme","themeSelectors","getTheme","authSelector","changeTheme","themeAction"],"mappings":"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","file":"static/js/3.2e0c3581.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__3N8hp\",\"editForm\":\"contactForm_editForm__32p8F\",\"input\":\"contactForm_input__24mWm\",\"editInput\":\"contactForm_editInput__9BEvR\",\"button\":\"contactForm_button__3h1Ya\",\"editButton\":\"contactForm_editButton__10qxs\",\"label\":\"contactForm_label__3nPZc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"contactList_contactList__2dqZe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"contactListItem_listItem__YqiFE\",\"listItemP\":\"contactListItem_listItemP__2EuvU\",\"listItemButton\":\"contactListItem_listItemButton__3HMwA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"Contacts_sectionTitle__3ehTF\",\"light\":\"Contacts_light__IQclv\",\"dark\":\"Contacts_dark__3cZ-J\"};","import contactsAction from './contactsAction';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n  dispatch(contactsAction.addContactRequest());\r\n\r\n axios\r\n    .post('/contacts', {\r\n      name,\r\n      number,\r\n    })\r\n    .then(({ data }) => {\r\n      dispatch(contactsAction.addContactSuccess(data));\r\n    })\r\n    .catch(error => dispatch(contactsAction.addContactError(error)));\r\n};\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(contactsAction.fetchContactsRequest());\r\n\r\n  axios('/contacts')\r\n    .then(({ data }) => dispatch(contactsAction.fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(contactsAction.fetchContactsError(error)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(contactsAction.deleteContactRequest());\r\n\r\n axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(contactsAction.deleteContactSuccess(id)))\r\n    .catch(error => dispatch(contactsAction.deleteContactError(error)));\r\n};\r\n\r\nconst changeContact = (id, name, number) => dispatch => {\r\n  dispatch(contactsAction.changeContactRequest());\r\n  axios\r\n    .patch(`/contacts/${id}`, { number, name })\r\n    .then(({data}) => {\r\n      dispatch(contactsAction.changeContactSuccess({contact:{id: data.id, name: data.name, number: data.number}}));\r\n    })\r\n    .catch(error => dispatch(contactsAction.changeContactError(error)));\r\n};\r\n\r\n\r\nexport default {\r\n  addContact,\r\n  deleteContact,\r\n  fetchContacts,\r\n  changeContact,\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\nconst getLoading = state => state.contactsRoot.loading;\r\nconst getFilter = state => state.contactsRoot.filter;\r\nconst getContacts = state => state.contactsRoot.contacts;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contactsRoot, filter) => {\r\n    return contactsRoot.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  },\r\n);\r\n\r\n\r\nexport default {\r\n  getFilter,\r\n  getLoading,\r\n  getContacts,\r\n  getFilteredContacts,\r\n};\r\n","import React, { Component } from 'react';\r\nimport styles from './contactForm.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactsOperation from '../../redux/contacts/contactsOperation';\r\n\r\nclass ConatctForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { onSubmit } = this.props;\r\n    name !== '' && number !== '' && onSubmit(name, number);\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.editForm} onSubmit={this.handleSubmit}>\r\n        <label className={styles.label}>\r\n          Name*\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"name\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Phone number*\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            placeholder=\"number\"\r\n          />\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSubmit: (name, number) =>\r\n      dispatch(contactsOperation.addContact(name, number)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ConatctForm);\r\n","import React, { Component } from 'react';\r\nimport styles from './contactListItem.module.css';\r\n\r\n\r\nclass ContactListItem extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { deleteIdEditContact, changeContact } = this.props;\r\n    const { name, number } = this.state;\r\n    changeContact(name, number);\r\n    deleteIdEditContact();\r\n  };\r\n\r\n  render() {\r\n    const { contact, isShowForm, addIdEditContact, deleteContact } = this.props;\r\n    // const { name, number } = this.state;\r\n    // console.log(addIdEditContact);\r\n    return (\r\n      <li className={styles.listItem}>\r\n        <p className={styles.listItemP}>\r\n          name: {contact.name} tel: {contact.number}\r\n        </p>\r\n\r\n        {/* {!isShowForm && (\r\n          <button\r\n            className={styles.listItemButton}\r\n            type=\"button\"\r\n            onClick={addIdEditContact}\r\n          >\r\n            Start Edit\r\n          </button>\r\n        )} */}\r\n\r\n        <button\r\n          className={styles.listItemButton}\r\n          onClick={deleteContact}\r\n          type=\"button\"\r\n        >\r\n          Delete\r\n        </button>\r\n\r\n        {/* {isShowForm && (\r\n          <form className={styles.editForm} onSubmit={this.handleSubmit}>\r\n            <label className={styles.label}>\r\n              Name*\r\n              <input\r\n                className={styles.input}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                placeholder=\"name\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <label className={styles.label}>\r\n              Phone number*\r\n              <input\r\n                className={styles.input}\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                value={number}\r\n                onChange={this.handleChange}\r\n                placeholder=\"number\"\r\n              />\r\n            </label>\r\n            <button className={styles.button} type=\"submit\">\r\n              EDIT\r\n            </button>\r\n          </form>\r\n        )} */}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactListItem;\r\n","import { connect } from 'react-redux';\r\nimport contactsOperation from '../../redux/contacts/contactsOperation';\r\nimport contactsAction from '../../redux/contacts/contactsAction';\r\nimport ContactListItem from \"./ContactListItem\"\r\n\r\nconst mapStateToProps = (state, { id }) => {\r\n    const arrayIdsEditContact = state.contactsRoot.idEditContact;\r\n    const isShowForm = arrayIdsEditContact.some(idEdit => idEdit === id);\r\n    return {\r\n      isShowForm,\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = (dispatch, { id }) => {\r\n    return {\r\n      deleteContact: () => dispatch(contactsOperation.deleteContact(id)),\r\n      changeContact: (name, number) =>\r\n        dispatch(contactsOperation.changeContact(id, name, number)),\r\n      addIdEditContact: () => dispatch(contactsAction.addIdEditContact(id)),\r\n      deleteIdEditContact: () => dispatch(contactsAction.deleteIdEditContact(id)),\r\n    };\r\n  };\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);","import React from 'react';\r\nimport styles from './contactList.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactsSelectors from \"../../redux/contacts/contactsSelectors\";\r\nimport ContactListItem from \"../contactListItem/ContactListIemContainer\"\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  // console.log(contacts);\r\n  return (\r\n    <ul className={styles.contactList}>\r\n      {contacts.map(contact => (\r\n        <ContactListItem key={contact.id} contact={contact} id={contact.id} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return { contacts: contactsSelectors.getFilteredContacts(state)}\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\"\r\nimport contactsAction from '../../redux/contacts/contactsAction';\r\n\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <form>\r\n      <label>\r\n        Find contacts by name\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={e => onChangeFilter(e.target.value)}\r\n        ></input>\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    value: state.contactsRoot.filter\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onChangeFilter: (text) => dispatch( contactsAction.changeFilter(text))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst Logo = () => {\r\n  return <h1>Phonebook</h1>;\r\n};\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport ConatctForm from '../../components/conactForm/ContactForm';\r\nimport ContactList from '../../components/contactList/ContactList';\r\nimport Filter from '../../components/filter/Filter';\r\nimport Logo from '../../components/logo/Logo';\r\nimport styles from './Contacts.module.css';\r\n// import themeSwitch from '../../services/themeSwitch';\r\n\r\n\r\nconst Contacts = ({ contacts,  isLoadingContact, isAuthenticated }) => {\r\n    // console.log(theme)\r\n  // let themeState = 'light';\r\n  // theme ? (themeState = 'light') : (themeState = 'dark');\r\n  return (\r\n    <div\r\n    //   style={{\r\n    //     color: themeSwitch[themeState].fontColor,\r\n    //     background: themeSwitch[themeState].bodybg,\r\n    //   }}\r\n    >\r\n      <div>\r\n        <>\r\n          <Logo />\r\n          {isLoadingContact && <h2>Loading...</h2>}\r\n          {/* <button onClick={changeTheme}>Change Theme</button> */}\r\n        </>\r\n      </div>\r\n      <ConatctForm />\r\n      <h2 className={styles.sectionTitle}>Contacts</h2>\r\n      {contacts && contacts.length > 1 && <Filter />}\r\n      <ContactList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport contactsOperation from '../../redux/contacts/contactsOperation';\r\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\r\nimport themeSelectors from '../../redux/theme/themeSelectors';\r\nimport themeAction from '../../redux/theme/themeAction';\r\nimport authSelector from \"../../redux/auth/authSelector\"\r\n\r\n\r\nimport Contacts from './Contacts';\r\n\r\nclass ContactsContainer extends Component {\r\n  componentDidMount() {\r\n\r\n    this.props.onFetchContacts();\r\n    // if (!this.props.isAuthenticated) {\r\n    //   this.props.history.replace(\"/login\")\r\n    // }\r\n    // return\r\n  }\r\n\r\n  // componentDidUpdate() {\r\n  //   if (!this.props.isAuthenticated) {\r\n  //     this.props.history.replace(\"/login\")\r\n  //   }\r\n  //   return\r\n  // }\r\n\r\n  render() {\r\n    return <Contacts {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    // console.log(state)\r\n  return {\r\n    contacts: contactsSelectors.getContacts(state),\r\n    theme: themeSelectors.getTheme(state),\r\n    isLoadingContact: contactsSelectors.getLoading(state),\r\n    isAuthenticated:  authSelector.isAuthenticated(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeTheme: () => dispatch(themeAction.changeTheme()),\r\n  onFetchContacts: () => dispatch(contactsOperation.fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsContainer);\r\n"],"sourceRoot":""}