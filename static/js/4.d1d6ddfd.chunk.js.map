{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","pages/LoginPage/LoginPage.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","LoginPage","dispatch","useDispatch","useState","email","setEmail","password","setPassword","onSubmit","e","preventDefault","authOperations","login","type","name","placeholder","onChange","target"],"mappings":"6LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,kFImDvFC,UAnDG,WAChB,IAAMC,EAAWC,cADK,EAGIC,mBAAS,IAHb,mBAGfC,EAHe,KAGRC,EAHQ,OAMUF,mBAAS,IANnB,mBAMfG,EANe,KAMLC,EANK,KAmBtB,OACE,6BACE,0CACA,0BAAMC,SAbW,SAAAC,GACnBA,EAAEC,iBACFT,EACEU,IAAeC,MAAM,CACnBR,MAAOA,EACPE,SAAUA,OASV,uCAEE,2BACEO,KAAK,QACLC,KAAK,QACLnB,MAAOS,EACPW,YAAY,WACZC,SA1BgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAAgBZ,EAASY,EAAOtB,WA6BpD,0CAEE,2BACEkB,KAAK,WACLC,KAAK,WACLnB,MAAOW,EACPS,YAAY,cACZC,SAjCmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAAgBV,EAAYU,EAAOtB,WAoC1D,4BAAQkB,KAAK,UAAb","file":"static/js/4.d1d6ddfd.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n// import {authOperations} from \"../../redux/auth\"\r\nimport authOperations from '../../redux/auth/authOperations';\r\n\r\nconst LoginPage = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [email, setEmail] = useState('');\r\n  const handleEmailChange = ({ target }) => setEmail(target.value);\r\n\r\n  const [password, setPassword] = useState('');\r\n  const handlePasswordChange = ({ target }) => setPassword(target.value);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      authOperations.login({\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login Page</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            placeholder=\"Email...\"\r\n            onChange={handleEmailChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            placeholder=\"Password...\"\r\n            onChange={handlePasswordChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" >\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"sourceRoot":""}